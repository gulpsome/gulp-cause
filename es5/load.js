'use strict';

exports.__esModule = true;
exports.default = load;

var _ramda = require('ramda');

var _ramda2 = _interopRequireDefault(_ramda);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dataError(what) {
  throw new Error('Don\'t know how to convert \'' + what + '\' of type ' + _ramda2.default.type(what) + ' to a Map.');
}

function evenLength(a) {
  if (a.length % 2 === 0) return true;
}

function atom(a) {
  // Array-to-Map conversion, where a is a flat array of even length
  var m = new Map();
  if (evenLength(a) && a.length >= 2) {
    for (var i = 0; i < a.length; i = i + 2) {
      m.set(a[i], a[i + 1]);
    }
  }
  return m;
}

function load(what) {
  // module.exports = function load (what) {
  switch (_ramda2.default.type(what)) {
    case 'Map':
      return what;
    case 'Object':
      return new Map(_ramda2.default.toPairs(what));
    case 'Array':
      if (_ramda2.default.type(what[0]) === 'Array' && what[0].length === 2) return new Map(what);else if (evenLength(what)) return atom(what);else dataError(what);
      break;
    default:
      dataError(what);
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xvYWQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O2tCQXFCd0IsSUFBSTs7Ozs7Ozs7QUFuQjVCLFNBQVMsU0FBUyxDQUFFLElBQUksRUFBRTtBQUN4QixRQUFNLElBQUksS0FBSyxtQ0FBK0IsSUFBSSxtQkFBYSxnQkFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFhLENBQUE7Q0FDekY7O0FBRUQsU0FBUyxVQUFVLENBQUUsQ0FBQyxFQUFFO0FBQ3RCLE1BQUksQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sSUFBSSxDQUFBO0NBQ3BDOztBQUVELFNBQVMsSUFBSSxDQUFFLENBQUMsRUFBRTs7QUFFaEIsTUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQTtBQUNqQixNQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtBQUNsQyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUN2QyxPQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUE7S0FDdEI7R0FDRjtBQUNELFNBQU8sQ0FBQyxDQUFBO0NBQ1Q7O0FBRWMsU0FBUyxJQUFJLENBQUUsSUFBSSxFQUFFOztBQUVsQyxVQUFRLGdCQUFFLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDbEIsU0FBSyxLQUFLO0FBQ1IsYUFBTyxJQUFJLENBQUE7QUFBQSxBQUNiLFNBQUssUUFBUTtBQUNYLGFBQU8sSUFBSSxHQUFHLENBQUMsZ0JBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7QUFBQSxBQUNqQyxTQUFLLE9BQU87QUFDVixVQUFJLGdCQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxPQUFPLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsT0FBTyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQSxLQUN4RSxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQSxLQUN2QyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDcEIsWUFBSztBQUFBLEFBQ1A7QUFDRSxlQUFTLENBQUMsSUFBSSxDQUFDLENBQUE7QUFBQSxHQUNsQjtDQUNGIiwiZmlsZSI6ImxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUiBmcm9tICdyYW1kYSdcblxuZnVuY3Rpb24gZGF0YUVycm9yICh3aGF0KSB7XG4gIHRocm93IG5ldyBFcnJvcihgRG9uJ3Qga25vdyBob3cgdG8gY29udmVydCAnJHt3aGF0fScgb2YgdHlwZSAke1IudHlwZSh3aGF0KX0gdG8gYSBNYXAuYClcbn1cblxuZnVuY3Rpb24gZXZlbkxlbmd0aCAoYSkge1xuICBpZiAoYS5sZW5ndGggJSAyID09PSAwKSByZXR1cm4gdHJ1ZVxufVxuXG5mdW5jdGlvbiBhdG9tIChhKSB7XG4gIC8vIEFycmF5LXRvLU1hcCBjb252ZXJzaW9uLCB3aGVyZSBhIGlzIGEgZmxhdCBhcnJheSBvZiBldmVuIGxlbmd0aFxuICBsZXQgbSA9IG5ldyBNYXAoKVxuICBpZiAoZXZlbkxlbmd0aChhKSAmJiBhLmxlbmd0aCA+PSAyKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSA9IGkgKyAyKSB7XG4gICAgICBtLnNldChhW2ldLCBhW2kgKyAxXSlcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9hZCAod2hhdCkge1xuICAvLyBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxvYWQgKHdoYXQpIHtcbiAgc3dpdGNoIChSLnR5cGUod2hhdCkpIHtcbiAgICBjYXNlICdNYXAnOlxuICAgICAgcmV0dXJuIHdoYXRcbiAgICBjYXNlICdPYmplY3QnOlxuICAgICAgcmV0dXJuIG5ldyBNYXAoUi50b1BhaXJzKHdoYXQpKVxuICAgIGNhc2UgJ0FycmF5JzpcbiAgICAgIGlmIChSLnR5cGUod2hhdFswXSkgPT09ICdBcnJheScgJiYgd2hhdFswXS5sZW5ndGggPT09IDIpIHJldHVybiBuZXcgTWFwKHdoYXQpXG4gICAgICBlbHNlIGlmIChldmVuTGVuZ3RoKHdoYXQpKSByZXR1cm4gYXRvbSh3aGF0KVxuICAgICAgZWxzZSBkYXRhRXJyb3Iod2hhdClcbiAgICAgIGJyZWFrXG4gICAgZGVmYXVsdDpcbiAgICAgIGRhdGFFcnJvcih3aGF0KVxuICB9XG59XG4iXX0=